// App principal
let prescricoes = { todas: [] };

// Fun√ß√£o para formatar categorias
function formatarCategoria(categoria) {
    const categorias = {
        'respiratoria': 'ü´Å Respirat√≥rias',
        'cardiovascular': '‚ù§Ô∏è Cardiovasculares',
        'neurologica': 'üß† Neurol√≥gicas',
        'gastrointestinal': 'ü´Ä Gastrointestinais',
        'otorrinolaringologica': 'üëÇ Otorrinolaringol√≥gicas',
        'alergica': 'ü§ß Al√©rgicas',
        'dermatologica': 'ü¶† Dermatol√≥gicas',
        'infecciosa': 'ü¶† Infecciosas',
        'endocrina': '‚öñÔ∏è End√≥crinas',
        'reumatologica': 'ü¶µ Reumatol√≥gicas',
        'psiquiatrica': 'üß† Psiqui√°tricas',
        'ortopedica': 'ü¶¥ Ortop√©dicas',
        'renal': 'üíß Renais',
        'oftalmologica': 'üëÅÔ∏è Oftalmol√≥gicas',
        'neonatal': 'üë∂ Neonatal',
        'geriatria': 'üßì Geriatria'
    };
    return categorias[categoria] || categoria;
}

// Fun√ß√£o principal de filtro
function filtrarPrescricoes() {
    const faixa = document.getElementById('faixaEtaria').value;
    const tipo = document.getElementById('tipoAtendimento').value;
    const searchTerm = document.getElementById('searchInput').value.toLowerCase();
    const selectPrescricao = document.getElementById('prescricao');
    
    selectPrescricao.innerHTML = '<option value="">Selecione uma prescri√ß√£o</option>';
    
    const filtradas = prescricoes.todas.filter(presc => {
        const matchFaixa = faixa === 'todas' || presc.faixa === faixa;
        const matchTipo = tipo === 'todos' || presc.tipo === tipo;
        const matchSearch = presc.nome.toLowerCase().includes(searchTerm);
        
        return matchFaixa && matchTipo && matchSearch;
    });
    
    // Agrupar por categoria
    const categorias = {};
    filtradas.forEach(presc => {
        if (!categorias[presc.categoria]) {
            categorias[presc.categoria] = [];
        }
        categorias[presc.categoria].push(presc);
    });
    
    // Adicionar ao select agrupado
    Object.keys(categorias).forEach(categoria => {
        const optgroup = document.createElement('optgroup');
        optgroup.label = formatarCategoria(categoria);
        categorias[categoria].forEach(presc => {
            const option = document.createElement('option');
            option.value = presc.id;
            option.textContent = presc.nome;
            optgroup.appendChild(option);
        });
        selectPrescricao.appendChild(optgroup);
    });
}

// Fun√ß√£o para carregar conte√∫do da prescri√ß√£o selecionada
function carregarConteudo() {
    const prescricaoId = document.getElementById('prescricao').value;
    const secaoEditor = document.getElementById('secao-editor');
    
    if (prescricaoId) {
        const prescricao = loader.buscarPorId(prescricaoId);
        if (prescricao) {
            document.getElementById('editor').innerHTML = prescricao.conteudo;
            
            // Configurar data atual como padr√£o
            const hoje = new Date();
            document.getElementById('dataPrescricao').value = hoje.toISOString().split('T')[0];
            
            // Mostrar se√ß√£o do editor
            secaoEditor.classList.remove('hidden');
            
            // Scroll suave para o editor
            secaoEditor.scrollIntoView({ behavior: 'smooth', block: 'start' });
        }
    } else {
        secaoEditor.classList.add('hidden');
    }
}

// Inicializa√ß√£o da aplica√ß√£o
async function inicializarApp() {
    try {
        // Carrega prescri√ß√µes automaticamente
        await loader.carregarTodasPrescricoes();
        prescricoes = loader.getPrescricoes();
        
        // Configura data atual
        document.getElementById('dataPrescricao').value = new Date().toISOString().split('T')[0];
        
        // Atualiza interface
        filtrarPrescricoes();
        
        console.log('üöÄ Aplica√ß√£o iniciada com sucesso!');
        console.log(`üìä Total de prescri√ß√µes: ${loader.getTotalPrescricoes()}`);
        
    } catch (error) {
        console.error('‚ùå Erro ao inicializar aplica√ß√£o:', error);
        alert('Erro ao carregar prescri√ß√µes. Verifique o console para detalhes.');
    }
}

// Inicializa√ß√£o quando a p√°gina carregar
window.onload = inicializarApp;
