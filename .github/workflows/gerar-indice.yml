name: üóÇÔ∏è Gerar √çndice de Prescri√ß√µes

on:
  push:
    paths:
      - 'js/prescricoes/**'
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  gerar-indice:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: üì• Checkout do c√≥digo
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: üóÉÔ∏è Gerar √≠ndice de prescri√ß√µes
      run: |
        echo "üìÅ Iniciando gera√ß√£o do √≠ndice..."
        
        # Script Node.js simplificado e direto
        node << 'EOF'
        const fs = require('fs');
        const path = require('path');

        const prescricoesDir = path.join(process.env.GITHUB_WORKSPACE, 'js', 'prescricoes');
        console.log(`üìÇ Escaneando: ${prescricoesDir}`);
        
        const indice = {
          geradoEm: new Date().toISOString(),
          geradoPor: 'GitHub Actions',
          commit: process.env.GITHUB_SHA || 'local',
          arquivos: []
        };

        function scanDirectory(dir, pastaBase = '') {
          if (!fs.existsSync(dir)) {
            console.log(`‚ùå Pasta n√£o existe: ${dir}`);
            return;
          }
          
          const itens = fs.readdirSync(dir);
          console.log(`üìÅ Pasta ${pastaBase || 'root'}: ${itens.length} itens`);
          
          itens.forEach(item => {
            if (item === 'indice.json') return;
            
            const caminhoCompleto = path.join(dir, item);
            const stat = fs.statSync(caminhoCompleto);
            
            if (stat.isDirectory()) {
              scanDirectory(caminhoCompleto, path.join(pastaBase, item));
            } else if (item.endsWith('.json')) {
              const caminhoRelativo = path.join(pastaBase, item);
              try {
                const dados = JSON.parse(fs.readFileSync(caminhoCompleto, 'utf8'));
                indice.arquivos.push({
                  caminho: caminhoRelativo.replace(/\\/g, '/'),
                  id: dados.id,
                  nome: dados.nome,
                  categoria: dados.categoria,
                  faixa: dados.faixa,
                  tipo: dados.tipo
                });
                console.log(`‚úÖ ${caminhoRelativo}`);
              } catch (e) {
                console.log(`‚ùå Erro em ${caminhoRelativo}: ${e.message}`);
              }
            }
          });
        }

        scanDirectory(prescricoesDir);
        indice.totalArquivos = indice.arquivos.length;
        
        // Salva o √≠ndice
        const indicePath = path.join(prescricoesDir, 'indice.json');
        fs.writeFileSync(indicePath, JSON.stringify(indice, null, 2));
        console.log(`üíæ √çndice salvo: ${indicePath}`);
        console.log(`üìä Total: ${indice.totalArquivos} arquivos`);
        EOF

    - name: üíæ Commit e Push
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add js/prescricoes/indice.json
        git commit -m "üóÇÔ∏è Atualizar √≠ndice de prescri√ß√µes" || echo "Nenhuma mudan√ßa para commit"
        git push
